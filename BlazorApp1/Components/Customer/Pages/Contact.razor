@page "/customer/contact"

@using System.ComponentModel.DataAnnotations

<PageTitle>Contact</PageTitle>

<h1 class="mb-4 text-center">Contact Us</h1>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow-sm">
                <div class="card-body">
                    <EditForm Model="@contactForm" OnValidSubmit="@HandleValidSubmit">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="mb-3">
                            <label for="name" class="form-label">Name</label>
                            <InputText id="name" class="form-control" @bind-Value="contactForm.Name" />
                            <ValidationMessage For="@(() => contactForm.Name)" />
                        </div>

                        <div class="mb-3">
                            <label for="email" class="form-label">Email</label>
                            <InputText id="email" type="email" class="form-control" @bind-Value="contactForm.Email" />
                            <ValidationMessage For="@(() => contactForm.Email)" />
                        </div>

                        <div class="mb-3">
                            <label for="message" class="form-label">Message</label>
                            <InputTextArea id="message" class="form-control" @bind-Value="contactForm.Message" />
                            <ValidationMessage For="@(() => contactForm.Message)" />
                        </div>

                        <button type="submit" class="btn btn-primary">Send</button>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private ContactForm contactForm = new ContactForm();

    private void HandleValidSubmit()
    {
        // Show an alert when the form is submitted
        JS?.InvokeVoidAsync("alert", "Message sent");

        // Reset the form
        contactForm = new ContactForm();
    }

    public class ContactForm
    {
        [Required(ErrorMessage = "Name is required")]
        public string Name { get; set; } = string.Empty;

        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Invalid email address")]
        public string Email { get; set; } = string.Empty;

        [Required(ErrorMessage = "Message is required")]
        public string Message { get; set; } = string.Empty;
    }

    [Inject]
    private IJSRuntime? JS { get; set; }
}