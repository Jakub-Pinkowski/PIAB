@page "/customer/shop"

@using Microsoft.AspNetCore.Components.Forms
@using BlazorApp1.Data
@using BlazorApp1.Models
@inject DatabaseService DbService
@inject IJSRuntime JS

<PageTitle>Shop</PageTitle>

<h1 class="mb-4">Shop</h1>

@code {
    private List<Product> products = new List<Product>();
    private List<Category> categories = new List<Category>();
    private List<Review> reviews = new List<Review>();
    private List<Supplier> suppliers = new List<Supplier>();
    private Product? selectedProduct;

    protected override async Task OnInitializedAsync()
    {
        products = await DbService.GetItemsAsync<Product>();
        categories = await DbService.GetItemsAsync<Category>();
        reviews = await DbService.GetItemsAsync<Review>();
        suppliers = await DbService.GetItemsAsync<Supplier>();
    }

    private void ShowMoreInfo(Product product)
    {
        selectedProduct = product;
        StateHasChanged();
    }

    private string GetCategoryName(int categoryId)
    {
        var category = categories.FirstOrDefault(c => c.Id == categoryId);
        return category?.Name ?? "Unknown";
    }

    private IEnumerable<Review> GetProductReviews(int productId)
    {
        return reviews.Where(r => r.ProductId == productId);
    }

    private IEnumerable<Supplier> GetProductSuppliers(int supplierId)
    {
        return suppliers.Where(s => s.Id == supplierId);
    }

    private void AddToCart()
    {
        if (selectedProduct != null)
        {
            var productName = selectedProduct.Name;
            JS.InvokeVoidAsync("alert", $"Product '{productName}' added to the cart");
        }
    }
}

<div class="container mt-5">
    <div class="row">
        @foreach (var product in products)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100 shadow-sm" style="position: static;">
                    <div>
                        <img src="@product.MainImage" class="card-img-top" alt="Product Image">
                        @* TODO: Maybe add hover image later *@
                        @* <img src="@product.AltImage" class="card-img-alt" alt="Product Image"> *@
                    </div>
                    <div class="card-body">
                        <h5 class="card-title">@product.Name</h5>
                        <p class="card-text">@product.Description</p>
                        <p class="card-text"><strong>@product.Price.ToString("C")</strong></p>
                        <button class="btn btn-primary" @onclick="() => ShowMoreInfo(product)" data-bs-toggle="modal"
                            data-bs-target="#productModal">Quick view</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<style>
    .modal-header {
        background-color: #f8f9fa;
        border-bottom: 1px solid #dee2e6;
    }

    .modal-body {
        padding: 1.5rem;
    }

    .modal-footer {
        background-color: #f8f9fa;
        border-top: 1px solid #dee2e6;
    }

    .modal-title {
        font-weight: bold;
    }

    .modal-body p {
        margin-bottom: 0.5rem;
    }

    .modal-body ul {
        list-style: none;
        padding: 0;
    }

    .modal-body ul li {
        margin-bottom: 1rem;
    }

    .modal-body ul li p {
        margin-bottom: 0.25rem;
    }
</style>

<!-- Modal -->
@if (selectedProduct != null)
{
    <div class="modal fade show" id="productModal" tabindex="-1" aria-labelledby="productModalLabel"
    style="display: block;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="productModalLabel">@selectedProduct.Name</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"
                    @onclick="() => selectedProduct = null"></button>
            </div>
            <div class="modal-body">
                <p>@selectedProduct.Description</p>
                <p><strong>Price: </strong>@selectedProduct.Price.ToString("C")</p>
                <p><strong>Category: </strong>@GetCategoryName(selectedProduct.CategoryId)</p>

                <h6>Suppliers</h6>
                @if (GetProductSuppliers(selectedProduct.SupplierId).Any())
                {
                    <ul>
                        @foreach (var supplier in GetProductSuppliers(selectedProduct.SupplierId))
                        {
                            <li>
                                <p><strong>Name: </strong>@supplier.Name</p>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p>No suppliers available for this product.</p>
                }

                <h6>Reviews</h6>
                @if (GetProductReviews(selectedProduct.Id).Any())
                {
                    <ul>
                        @foreach (var review in GetProductReviews(selectedProduct.Id))
                        {
                            <li>
                                <p><strong>Rating: </strong>@review.Rating</p>
                                <p>@review.Content</p>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p>No reviews available for this product.</p>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"
                    @onclick="() => selectedProduct = null">Close</button>
                <button type="button" class="btn btn-primary" @onclick="AddToCart">Add to cart</button>
            </div>
        </div>
    </div>
</div>
}