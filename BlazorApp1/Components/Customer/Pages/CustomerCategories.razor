@page "/customer/customercategories"

@using Microsoft.AspNetCore.Components.Forms
@using BlazorApp1.Data
@using BlazorApp1.Models
@inject DatabaseService DbService

<PageTitle>Categories</PageTitle>

<h1 class="mb-4">Categories</h1>

<div class="row">
    @foreach (var category in categories)
    {
        <div class="col-md-4 mb-4 d-flex">
            <div class="card flex-fill shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">@category.Name</h5>
                    <p class="card-text">Number of Products: @GetProductCount(category.Id)</p>
                    <h6>Top Products</h6>
                    <ul style="list-style: none; margin: 0; padding: 0;">
                        @foreach (var product in GetTopProducts(category.Id))
                        {
                            <li>
                                <p><strong>@product.Name</strong> - @product.Price.ToString("C")</p>
                            </li>
                        }
                    </ul>
                    <h6>Suppliers</h6>
                    <ul style="list-style: none; margin: 0; padding: 0;">
                        @foreach (var supplier in GetCategorySuppliers(category.Id))
                        {
                            <li>
                                <p><strong>@supplier.Name</strong></p>
                            </li>
                        }
                    </ul>
                    <h6>Tags</h6>
                    <ul style="list-style: none; margin: 0; padding: 0;">
                        @foreach (var tag in GetCategoryTags(category.Id))
                        {
                            <li>
                                <p><strong>@tag.Name</strong></p>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    }
</div>

<style>
    h1 {
        color: #343a40;
    }

    .card {
        border-radius: 10px;
        transition: transform 0.2s;
    }

    .card:hover {
        transform: scale(1.05);
    }

    .card-title {
        font-weight: bold;
    }

    .card-text {
        color: #6c757d;
    }
</style>

@code {
    private List<Category> categories = new List<Category>();
    private List<Product> products = new List<Product>();
    private List<Supplier> suppliers = new List<Supplier>();
    private List<Tag> tags = new List<Tag>();
    private List<ProductSupplier> productSuppliers = new List<ProductSupplier>();
    private List<ProductTag> productTags = new List<ProductTag>();

    protected override async Task OnInitializedAsync()
    {
        categories = await DbService.GetItemsAsync<Category>();
        products = await DbService.GetItemsAsync<Product>();
        suppliers = await DbService.GetItemsAsync<Supplier>();
        tags = await DbService.GetItemsAsync<Tag>();
        productSuppliers = await DbService.GetItemsAsync<ProductSupplier>();
        productTags = await DbService.GetItemsAsync<ProductTag>();
    }

    private int GetProductCount(int categoryId)
    {
        return products.Count(p => p.CategoryId == categoryId);
    }

    private IEnumerable<Product> GetTopProducts(int categoryId)
    {
        return products.Where(p => p.CategoryId == categoryId).Take(3);
    }

    private IEnumerable<Supplier> GetCategorySuppliers(int categoryId)
    {
        var productIds = products.Where(p => p.CategoryId == categoryId).Select(p => p.Id);
        var supplierIds = productSuppliers.Where(ps => productIds.Contains(ps.ProductId)).Select(ps =>
        ps.SupplierId).Distinct();
        return suppliers.Where(s => supplierIds.Contains(s.Id));
    }

    private IEnumerable<Tag> GetCategoryTags(int categoryId)
    {
        var productIds = products.Where(p => p.CategoryId == categoryId).Select(p => p.Id);
        var tagIds = productTags.Where(pt => productIds.Contains(pt.ProductId)).Select(pt => pt.TagId).Distinct();
        return tags.Where(t => tagIds.Contains(t.Id));
    }
}