@page "/customer/customerreviews"

@using Microsoft.AspNetCore.Components.Forms
@using BlazorApp1.Data
@using BlazorApp1.Models
@inject DatabaseService DbService

<PageTitle>Customer Reviews</PageTitle>

<h1 class="mb-4">Customer Reviews</h1>

<div class="row">
    @foreach (var review in reviews)
    {
        <div class="col-md-4 mb-4 d-flex">
            <div class="card flex-fill shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">@GetProductName(review.ProductId)</h5>
                    <h6 class="card-subtitle mb-2 text-muted">Reviewed by: @GetCustomerName(review.CustomerId)</h6>
                    <p class="card-text">@review.Content</p>
                    <p class="card-text"><strong>Rating: </strong>@review.Rating</p>
                </div>
            </div>
        </div>
    }
</div>

<style>
    h1 {
        color: #343a40;
    }

    .card {
        border-radius: 10px;
        transition: transform 0.2s;
    }

    .card:hover {
        transform: scale(1.05);
    }

    .card-title {
        font-weight: bold;
    }

    .card-subtitle {
        font-style: italic;
    }

    .card-text {
        color: #6c757d;
    }
</style>

@code {
    private List<Review> reviews = new List<Review>();
    private List<Product> products = new List<Product>();
    private List<Customer> customers = new List<Customer>();

    protected override async Task OnInitializedAsync()
    {
        reviews = await DbService.GetItemsAsync<Review>();
        products = await DbService.GetItemsAsync<Product>();
        customers = await DbService.GetItemsAsync<Customer>();
    }

    private string GetProductName(int productId)
    {
        var product = products.FirstOrDefault(p => p.Id == productId);
        return product?.Name ?? "Unknown Product";
    }

    private string GetCustomerName(int customerId)
    {
        var customer = customers.FirstOrDefault(c => c.Id == customerId);
        return customer?.Name ?? "Unknown Customer";
    }
}